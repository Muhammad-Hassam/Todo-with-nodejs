{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","item","setItem","todos","setTodos","type","onChange","target","value","onClick","newtodos","push","map","todo","index","splice","deleteItem","editdata","prompt","editItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA4CeA,G,MAxCL,WAAK,IAAD,EAEQC,mBAAS,IAFjB,mBAEPC,EAFO,KAEDC,EAFC,OAGSF,mBAAS,IAHlB,mBAGPG,EAHO,KAGDC,EAHC,KA6BZ,OACE,qCACA,0CACA,uBAAOC,KAAK,OAAOC,SA3BL,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAClBL,EAAQK,EAAOC,QA0B6BA,MAAOP,IACjD,wBAAQQ,QAxBE,WACZ,IAAIC,EAAS,YAAIP,GACjBO,EAASC,KAAKV,GACdG,EAASM,GACTR,EAAQ,KAoBN,sBACA,2CACA,6BAAKC,EAAMS,KAAI,SAACC,EAAMC,GAAP,OAAe,+BAAiBD,EAAK,wBAAQJ,QAAS,kBAnBxD,SAACK,GAChBX,EAAMY,OAAOD,EAAM,GACnB,IAAIJ,EAAS,YAAIP,GACjBC,EAASM,GAgBkEM,CAAWF,IAAhC,oBAAuD,wBAAQL,QAAS,kBAbjH,SAACK,GACd,IAAIG,EAASC,OAAO,mBACpBf,EAAMY,OAAOD,EAAM,EAAEG,GACrB,IAAIP,EAAS,YAAIP,GACjBC,EAASM,GASyHS,CAASL,IAA9B,oBAApEA,aC3B5BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c3242df.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from \"react\"\nimport  React from \"react\";\n\nconst App=()=>{\n\nconst [item, setItem]=useState(\"\");\nconst [todos,setTodos]=useState([])\n\nconst handleInput=({target})=>{\n  setItem(target.value);\n};\n\nconst addTodo=()=>{\n  let newtodos=[...todos];\n  newtodos.push(item);\n  setTodos(newtodos);\n  setItem(\"\");\n};\n\nconst deleteItem=(index)=>{\n  todos.splice(index,1);\n  let newtodos=[...todos];\n  setTodos(newtodos);\n};\n\nconst editItem=(index)=>{\n  let editdata=prompt(\"Enter your data\")\n  todos.splice(index,1,editdata);\n  let newtodos=[...todos];\n  setTodos(newtodos);\n};\n\n  return(\n    <>\n    <h1>Todo App</h1>\n    <input type=\"text\" onChange={handleInput} value={item}/>\n    <button onClick={addTodo}>Add todo</button>\n    <h2>Todo list</h2>\n    <ul>{todos.map((todo, index)=><li key={index}>{todo}<button onClick={()=>deleteItem(index)}>Delete</button><button onClick={()=>editItem(index)}>Edit</button></li>)}</ul>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}